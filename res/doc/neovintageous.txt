*neovintageous.txt*  Neovintageous


                NEOVINTAGEOUS REFERENCE MANUAL


Neovintageous                                             *neovintageous* *nv*

 1. Navigation                      |nv-navigation|
 2. Jumping to diffs                |nv-jumpto-diffs|
 3. Opening a split window          |nv-splits|
 4. Command Palette                 |nv-command-palette|
 5. Toggle                          |nv-toggle|
 6. neovintageousrc                 |nv-rc|
 7. Multiple cursors                |nv-multiple-cursors|
 8. Plugins out-of-the-box          |nv-plugins|
    1.1 Abolish                         |nv-abolish|
    1.2 Commentary                      |nv-commentary|
    1.3 HighlightedYank                 |nv-highlightedyank|
    1.4 Surround                        |nv-surround|
    1.5 Unimpaired                      |nv-unimpaired|
    1.6 Indent Object                   |nv-indent-object|
 9. Plugins out-of-the-box          |nv-plugins|
10. Options                         |nv-options|
11. Search highlighting             |nv-search-highlighting|
12. Disable arrow keys              |nv-disable-arrow-keys|
13. Default options                 |nv-default-options|

Neovintageous is an emulation of Vim: feature-parity is ongoing effort. If you
are new to Vim see |help.txt|.

==============================================================================

NAVIGATION                                                     *nv-navigation*

Sidebar navigation

CTRL-0                  Focus sidebar.
j                       Move down.
k                       Move up.
h                       Close node / Goto parent node.
l                       Open node.

Overlay / autocomplete navigation

CTRL-J
CTRL-N                  Move selection down / Next selection.

CTRL-P
CTRL-K                  Move selection up / Previous selection.

==============================================================================

JUMPING TO DIFFS                                             *nv-jumpto-diffs*

Two commands can be used to jump to diffs.

                                *[c*
    [c      Jump backwards to the previous start of a change.
            When a count is used, do it that many times.
                                *]c*
    ]c      Jump forwards to the next start of a change.
            When a count is used, do it that many times.

It is an error if there is no change for the cursor to move to.

In older versions of Sublime Text (builds < 3189) you will need the the
GitGutter plugin: https://github.com/jisaacks/GitGutter.

==============================================================================

OPENING A WINDOW                                           *nv-opening-window*

Two commands can be used to split views. Both command require the plugin
Origami: https://github.com/SublimeText/Origami.

CTRL-W s
CTRL-W S
CTRL-W CTRL-S
:sp[lit] [file]         Split current window in two. The result is two views
                        on the same file. See |CTRL-W_s|.

CTRL-W CTRL-V
CTRL-W v
:vs[plit] [file]        Like |:split|, but split vertically. See |CTRL-W_v|.

==============================================================================

COMMAND PALETTE                                           *nv-command-palette*

NeoVintageous: Changelog
NeoVintageous: Open .neovintageousrc File
NeoVintageous: Reload .neovintageousrc File
NeoVintageous: Toggle CTRL keys
NeoVintageous: Toggle SUPER keys

==============================================================================

TOGGLE COMMAND                                                     *nv-toggle*

The official ToggleNeoVintageous plugin provides a toggle command:
https://github.com/NeoVintageous/ToggleNeoVintageous

==============================================================================

NEOVINTAGEOUSRC                                                        *nv-rc*
                                                                *vintageousrc*
                                                             *neovintageousrc*

In Vim, a file that contains initialization commands is called a
neovintageousrc file. The file is located at "Packages/User/.neovintageousrc"
and is read by during startup. It can be edited and reloaded via the Command
Palette commands:

* NeoVintageous: Open My .neovintageousrc File
* NeoVintageous: Reload My .neovintageousrc File

The |mapleader| variable is supported. To define a mapping which uses the
"mapleader" variable, the special string "<leader>" can be used. It is
replaced with the string value of "mapleader". If "mapleader" is not set or
empty, a backslash is used instead. Example: >

    nnoremap <leader>w 3w

Works like: >

    noremap \w  3w

But after: >

    let mapleader=,

It works like: >

    nnoremap ,w 3w

The following |:map-commands| are supported ({lhs} means left-hand-side and
{rhs} means right-hand-side).

:noremap    {lhs} {rhs}         |:noremap|
:nnoremap   {lhs} {rhs}         |:nnoremap|
:onoremap   {lhs} {rhs}         |:onoremap|
:snoremap   {lhs} {rhs}         |:snoremap|
:vnoremap   {lhs} {rhs}         |:vnoremap|

When mapping to Ex commands use <CR> (carriage-return) to indicate pressing
enter, otherwise the Command-line with be invoked: >

    nnoremap <C-s> :w<CR>
    vnoremap <C-s> :w<CR>

You can map to Sublime Text commands, these commands start with an uppercase
letter (this is to avoid confusion with built-in Ex commands). The command is
converted to snake_case and accepts args key=value format: >

    nnoremap <leader>p :ShowOverlay overlay=goto show_files=true<CR>
    nnoremap <leader>f :ShowOverlay overlay=goto text=@<CR>

Super-keys, known as windows-keys or command-keys, are disabled by default: >

    nnoremap <D-i> :GotoSymbolInProject<CR>

A command is provided out-of-the-box for mapping to toggle the side bar:

    nnoremap <leader>d :Neovintageous action=toggle_side_bar<CR>

To enable the ability to toggle the side bar when the side bar has focus:

`Menu > Preferences > Key Bindings`: >

    [
        {
            "keys": [",", "d"],
            "command": "neovintageous",
            "args": { "action": "toggle_side_bar" },
            "context": [
                { "key": "control", "operand": "sidebar_tree" }
            ]
        }
    ]

More examples: >

    " The character " (the double quote mark) starts a comment
    " Type :h neovintageousrc for help.

    let mapleader=,

    " Toggle the side bar.
    nnoremap <leader>d :Neovintageous action=toggle_side_bar<CR>

    " Saving.
    nnoremap <C-s> :w<CR>
    vnoremap <C-s> :w<CR>

    " Yank and paste using system clipboard.
    noremap <leader>y "+y
    noremap <leader>Y "+Y
    noremap <leader>p "+p
    noremap <leader>P "+P
    noremap <leader>yy "+Y

    " Show me the registers.
    nnoremap <leader>r :reg<CR>

    " Show me the symbols.
    nnoremap <leader>f :ShowOverlay overlay=goto text=@<CR>
    nnoremap <leader>i :GotoSymbolInProject<CR>
    " Or if you're using super-keys (disabled by default):
    nnoremap <D-i> :GotoSymbolInProject<CR>

    " Sorted.
    nnoremap <leader>s) vi)<F9>o<Esc>$^
    nnoremap <leader>s] vi]<F9>o<Esc>$^
    nnoremap <leader>si vii<F9>o<Esc>$^
    nnoremap <leader>sp vip<F9>o<Esc>$^
    nnoremap <leader>ss vii<F9>o<Esc>$^
    vnoremap <leader>s :sort iu<CR>

    " Windowing aliases (especially useful if you don't enable ctrl-keys keys).
    nnoremap <leader>_ <C-w>_
    nnoremap <leader><bar> <C-w><bar>
    nnoremap <leader>= <C-w>=

    " Origami: https://packagecontrol.io/packages/Origami.
    nnoremap <leader>. :ToggleZoomPane<CR>
    nnoremap <leader>ws :CarryFileToPane direction=down<CR>
    nnoremap <leader>wv :CarryFileToPane direction=right<CR>
    nnoremap <leader>wd :DestroyPane direction=self<CR>

    " Git
    nnoremap <leader>hu :RevertModification<CR>

==============================================================================

MULTIPLE CURSORS                                         *nv-multiple-cursors*

There two ways to use multiple cursors in Neovintageous.

The first is to enter insert mode, i, then use CTRL-D to make multiple
selections, press Esc to enter normal mode, from here you can use
NeoVintageous normally e.g. $ will jump the cursors to the end of line, ^ all
cursors to the start of line, v enters all cursors into visual mode, f{char}
makes all cursors visually select to {char}, etc.

The second way is enter select mode, a non-standard mode that is used for
multiple selections. This mode is not the same as select mode in Vim.

gh                      Enter select mode (from normal or visual mode).
j                       Add selection.
k                       Remove selection.
l                       Skip current selection.
A                       Select all instances.
i                       Enter visual mode (preserving selections).
J                       Clear multiple selections and enter normal mode.
gH                      After a search with / or ? (select all matches).

Once you've created visual selections in select mode, you must return to
insert mode by pressing i in order to edit text. Once in insert mode, you can
switch to normal mode, etc. If you press Esc while in select mode, you will
return to normal mode, but multiple carets won't be destroyed. If you press
Esc a second time, you will be left with one single caret in normal mode.

==============================================================================

MODELINE                                                         *nv-modeline*

A feature comparative to Vim |modeline|: a number of lines at the beginning
and end of the file are checked for set command, the settings will be applied
to the view when it's opened. This is easiest to understand with some
examples: >

    # sublime: gutter false
    # sublime: translate_tab_to_spaces true
    # sublime: rulers [80, 120]
    # sublime: tab_size 4

==============================================================================

PLUGINS                                                           *nv-plugins*
                                                                     *plugins*

------------------------------------------------------------------------------

ABOLISH                                                           *nv-abolish*
                                                                     *abolish*

Only the abolish case mutating algorithms are supported, they can be applied
to the word under the cursor.

See |abolish.txt|.

------------------------------------------------------------------------------

COMMENTARY                                                     *nv-commentary*
                                                                  *commentary*

Comment stuff out. Then uncomment it later.

See |commentary.txt|.

------------------------------------------------------------------------------

HIGHLIGHTEDYANK                                           *nv-highlightedyank*
                                                             *highlightedyank*

A plugin to highlight yanked regions. That is a pretty trick to make your
coding easier.

The plugin can be disabled by the 'highlightedyank' setting.

The highlighted duration can be configured by the 'highlightedyank_duration'
setting.

When new text is yanked, the old highlighting is deleted. Or when former lines
are edited, the highlighting is deleted to prevent shifting the position,
also.

The highlighted style can be configured by the 'highlightedyank_style'
setting.

To customise the colors, create a color scheme override for your color scheme:
for example if you have the default Monokai color scheme enabled, create a
file named `Monokai.sublime-color-scheme` in the User directory (find the User
directory location via the Menu: `Preferences > Browse Packages...`), then
create the styles using the scopes: >

To customise the colors, create a color scheme override: for example if you
have the default Monokai color scheme enabled - create a file named `Monokai
.sublime-color-scheme` in the Sublime Text User directory (`Menu > Preferences
> Browse Packages...`), and create the styles using the "highlightedyank"
scope: >

    {
        "rules":
        [
            {
                "scope": "highlightedyank",
                "background": "#e6db74",
                "foreground": "#272822"
            }
        ]
    }

------------------------------------------------------------------------------

SURROUND                                                         *nv-surround*
                                                                    *surround*

A plugin for deleting, changing, and adding "surroundings".

See |surround.txt|.

------------------------------------------------------------------------------

UNIMPAIRED                                                     *nv-unimpaired*
                                                                  *unimpaired*

This plugin provides several pairs of bracket maps.

The following maps all correspond to normal mode commands.  If a count is
given, it becomes an argument to the command.

[b      |:bprevious|
]b      |:bnext|
[B      |:bfirst|
]B      |:blast|
[t      |:tprevious|
]t      |:tnext|
[T      |:tfirst|
]T      |:tlast|

Two commands can be used to jump to errors. Both command require the plugin
SublimeLinter: https://github.com/SublimeLinter/SublimeLinter3.

[l                      Jump to the [count] previous error.
]l                      Jump to the [count] next error.

[<Space>                Add [count] blank lines above the cursor.
]<Space>                Add [count] blank lines below the cursor.

[e                      Exchange the current line with [count] lines above it.
]e                      Exchange the current line with [count] lines below it.

Option toggling (some are specific to NeoVintageous: meaning they are not
available in the original Unimpaired plugin).

On      Off     Toggle  Option
*[oa*   *]oa*   *coa*   'menu' {Neovintageous specific}
*[oc*   *]oc*   *coc*   'cursorline'
*[oe*   *]oe*   *coe*   'statusbar' {Neovintageous specific}
*[ol*   *]ol*   *col*   'list'
*[om*   *]om*   *com*   'minimap' {Neovintageous specific}
*[on*   *]on*   *con*   'number'
*[ot*   *]ot*   *cot*   'sidebar' {Neovintageous specific}
*[os*   *]os*   *cos*   'spell'
*[ow*   *]ow*   *cow*   'wrap'

See |unimpaired.txt|.

------------------------------------------------------------------------------

INDENT OBJECT                                               *nv-indent-object*
                                                               *indent-object*

This plugin defines a new text object, based on indentation levels.

See |indent-object.txt|.

==============================================================================

OPTIONS                                                           *nv-options*

1. Setting options                                             *nv-set-option*

`Menu > Preferences > Settings`: >

    {
        "vintageous_use_ctrl_keys": true
    }

`Menu > Project > Edit Project`: >

    {
        "settings": {
            "vintageous_use_ctrl_keys": true
        }
    }

------------------------------------------------------------------------------

2. Mapping capslock to escape                                    *nv-capslock*

Neovintageous cannot remap the CapsLock, however it can be remapped at an OS
level e.g. in Ubuntu you can remap the CapsLock to Escape at the terminal: >

    gsettings set org.gnome.desktop.input-sources xkb-options "['caps:escape']"

------------------------------------------------------------------------------

3. Holding down a key like j does not repeat the command                *nv-j*

This is a feature of OS X Lion and newer versions. To make a key repeat a
command when holding it down, run this once at the terminal: >

    defaults write com.sublimetext.3 ApplePressAndHoldEnabled -bool false

------------------------------------------------------------------------------

4. Mapping jj, jk, CTRL-[, etc. to Esc                             *nv-escape*

`Menu > Preferences > Key Bindings`

jj -> Esc: >

    { "keys": ["j", "j"], "command": "_enter_normal_mode", "args": {"mode": "mode_insert"}, "context": [{"key": "vi_insert_mode_aware"}] }

jk -> Esc: >

    { "keys": ["j", "k"], "command": "_enter_normal_mode", "args": {"mode": "mode_insert"}, "context": [{"key": "vi_insert_mode_aware"}] }

CTRL-[ -> Esc: >

    { "keys": ["ctrl+["], "command": "_enter_normal_mode", "args": {"mode": "mode_insert"}, "context": [{"key": "vi_insert_mode_aware"}] }

------------------------------------------------------------------------------

5. Options summary                                         *nv-option-summary*

                                                           *'highlightedyank'*
'highlightedyank' boolean (default on)
    Enable/disable the plugin.

                                                  *'highlightedyank_duration'*
'highlightedyank_duration' number (default 1000)
        Assign number of time in milliseconds.

                                                     *'highlightedyank_style'*
'highlightedyank_style' string (default fill)
    Accepts any of the following:
        fill
        outline
        underline
        squiggly_underline
        stippled_underline

                                             *'neovintageous_search_cur_style'*
'neovintageous_search_cur_style' string (default fill)
    Current search style. Accepts any of the following:
        fill
        outline
        underline
        squiggly_underline
        stippled_underline

                                             *'neovintageous_search_inc_style'*
'neovintageous_search_inc_style' string (default fill)
    Incremental search style. Accepts any of the following:
        fill
        outline
        underline
        squiggly_underline
        stippled_underline

                                             *'neovintageous_search_occ_style'*
'neovintageous_search_occ_style' string (default fill)
    Search occurrences style. Accepts any of the following:
        fill
        outline
        underline
        squiggly_underline
        stippled_underline

                                                       *'vintageous_hlsearch'*
'vintageous_hlsearch'   boolean (default on)
        See 'hlsearch'.

                                                     *'vintageous_ignorecase'*
'vintageous_ignorecase' boolean (default on)
        See 'ignorecase'.

                                                      *'vintageous_incsearch'*
'vintageous_incsearch'  boolean (default on)
        See 'incsearch'.

                                                          *'vintageous_magic'*
'vintageous_magic'      boolean (default off)
        See 'magic'.

                                                       *'vintageous_modeline'*
'vintageous_modeline'   boolean (default off)
        See 'modeline'.

                                                      *'vintageous_modelines'*
'vintageous_modelines'  number (default 5)
        See 'modelines'.

                                 *'vintageous_reset_mode_when_switching_tabs'*
'vintageous_reset_mode_when_switching_tabs'
                        boolean (default on)
        Reset to normal mode when a tab is activated.

                                                  *'vintageous_use_ctrl_keys'*
'vintageous_use_ctrl_keys'
                        boolean (default: true)
        Enable key bindings prefaced by the ctrl-key.

                                                 *'vintageous_use_super_keys'*
'vintageous_use_super_keys'
                        boolean (default off)
        Enable key bindings prefaced by the super-key, otherwise known as the
        command-key in OSX, and as the windows-key in Windows.

                                              *'vintageous_use_sys_clipboard'*
'vintageous_use_sys_clipboard'
                        boolean (default off)
        Propagate copy actions to the system clipboard.

                                                        *'vintageous_belloff'*
'vintageous_belloff'    string (default "")
        Specifies for which events the bell (visual blink) will not be rung. It
        is a comma separated list of items. For each item that is present, the
        bell will be silenced.

        Currently only the "all" event is supported.

        item        meaning when present    ~
        all         All events.

==============================================================================

SEARCH HIGHLIGHTING                                   *nv-search-highlighting*
                                                      *search-highlighting*

Searches supporting highlighting include `/`, `?`, `*`, and `#`.

The highlighted styles can be configured by the settings
'neovintageous_search_cur_style', 'neovintageous_search_inc_style', and
'neovintageous_search_occ_style'.

To customise the colors of each state, create a color scheme override: for
example if you have the default Monokai color scheme enabled - create a file
named `Monokai.sublime-color- scheme` in the Sublime Text User directory
(`Menu > Preferences > Browse Packages...`), and create the styles using the
`neovintageous_search_*` scopes: >

    {
        "rules":
        [
            {
                "scope": "neovintageous_search_inc",
                "background": "#a1efe4",
                "foreground": "#272822"
            },
            {
                "scope": "neovintageous_search_cur",
                "background": "#a1efe4",
                "foreground": "#272822"
            },
            {
                "scope": "neovintageous_search_occ",
                "background": "#e6db74",
                "foreground": "#272822"
            }
        ]
    }

==============================================================================

DISABLE ARROW KEYS                                     *nv-disable-arrow-keys*

Add as many of the following key bindings as you would like to disable: >

    {"keys": ["left"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["right"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["up"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["down"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["alt+left"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["alt+down"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["alt+up"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["alt+right"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+left"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+down"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+up"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+right"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+shift+left"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+shift+down"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+shift+up"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+shift+right"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+tab"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+shift+left"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+shift+down"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+shift+up"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["ctrl+shift+right"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["shift+left"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["shift+down"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["shift+up"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]},
    {"keys": ["shift+right"], "command": "null", "context": [{"key": "setting.neovintageous_disable_arrow_keys"}, {"key": "auto_complete_visible", "operand": false}, {"key": "overlay_visible", "operand": false}, {"key": "popup_visible", "operand": false}, {"key": "setting.is_widget", "operator": "equal", "operand": false}]}

Then enable/disable keymaps:

`Menu > Preferences > Settings`: >

    {
        "neovintageous_disable_arrow_keys": true
    }

==============================================================================

DEFAULT OPTIONS                                           *nv-default-options*

If you compare a fresh install of Vim to NeoVintageous you might find
unexpected functionality. This is in part because NeoVintageous assumes some
Vim options that may not be default in an out-of-the-box Vim installation.

Here are some Vim options that NeoVintageous assumes as default:

>

    " Use Vim settings, rather than Vi settings (much better!).
    " This must be first, because it changes other options as a side effect.
    " Avoid side effects when it was already reset.
    if &compatible
      set nocompatible
    endif

    " In many terminal emulators the mouse works just fine.  By enabling it you
    " can position the cursor, Visually select and scroll with the mouse.
    if has('mouse')
      set mouse=a
    endif

    " Allow backspacing over everything in insert mode.
    set backspace=indent,eol,start

    set showcmd     " display incomplete commands
